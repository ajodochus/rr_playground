<?xml version="1.0"?>
<doc>
    <assembly>
        <name>playground</name>
    </assembly>
    <members>
        <member name="T:playground.compare_xml.compare_xml">
             <summary>
            The compare_xml recording.
             </summary>
        </member>
        <member name="F:playground.compare_xml.compare_xml.repo">
            <summary>
            Holds an instance of the global::playground.playgroundRepository repository.
            </summary>
        </member>
        <member name="M:playground.compare_xml.compare_xml.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:playground.compare_xml.compare_xml.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="M:playground.compare_xml.compare_xml.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:playground.compare_xml.compare_xml.Instance"/>.
            </summary>
        </member>
        <member name="M:playground.compare_xml.compare_xml.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:playground.compare_xml.compare_xml.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:playground.ocr.Get_strings_from_pic">
             <summary>
            The get_strings_from_pic recording.
             </summary>
        </member>
        <member name="F:playground.ocr.Get_strings_from_pic.repo">
            <summary>
            Holds an instance of the global::playground.playgroundRepository repository.
            </summary>
        </member>
        <member name="M:playground.ocr.Get_strings_from_pic.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:playground.ocr.Get_strings_from_pic.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="M:playground.ocr.Get_strings_from_pic.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:playground.ocr.Get_strings_from_pic.Instance"/>.
            </summary>
        </member>
        <member name="M:playground.ocr.Get_strings_from_pic.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:playground.ocr.Get_strings_from_pic.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:playground.playgroundRepository">
            <summary>
            The class representing the playgroundRepository element repository.
            </summary>
        </member>
        <member name="P:playground.playgroundRepository.Instance">
            <summary>
            Gets the singleton class instance representing the playgroundRepository element repository.
            </summary>
        </member>
        <member name="M:playground.playgroundRepository.#ctor">
            <summary>
            Repository class constructor.
            </summary>
        </member>
        <member name="P:playground.playgroundRepository.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="P:playground.playgroundRepository.hello_world">
            <summary>
            The hello_world item.
            </summary>
        </member>
        <member name="P:playground.playgroundRepository.hello_worldInfo">
            <summary>
            The hello_world item info.
            </summary>
        </member>
        <member name="P:playground.playgroundRepository.Form1">
            <summary>
            The Form1 folder.
            </summary>
        </member>
        <member name="T:playground.playgroundRepositoryFolders">
            <summary>
            Inner folder classes.
            </summary>
        </member>
        <member name="T:playground.playgroundRepositoryFolders.Form1AppFolder">
            <summary>
            The Form1AppFolder folder.
            </summary>
        </member>
        <member name="M:playground.playgroundRepositoryFolders.Form1AppFolder.#ctor(Ranorex.Core.Repository.RepoGenBaseFolder)">
            <summary>
            Creates a new Form1  folder.
            </summary>
        </member>
        <member name="P:playground.playgroundRepositoryFolders.Form1AppFolder.Self">
            <summary>
            The Self item.
            </summary>
        </member>
        <member name="P:playground.playgroundRepositoryFolders.Form1AppFolder.SelfInfo">
            <summary>
            The Self item info.
            </summary>
        </member>
        <member name="P:playground.playgroundRepositoryFolders.Form1AppFolder.timestamps">
            <summary>
            The timestamps item.
            </summary>
        </member>
        <member name="P:playground.playgroundRepositoryFolders.Form1AppFolder.timestampsInfo">
            <summary>
            The timestamps item info.
            </summary>
        </member>
        <member name="P:playground.playgroundRepositoryFolders.Form1AppFolder.picture_from_textbox">
            <summary>
            The picture_from_textbox item.
            </summary>
        </member>
        <member name="P:playground.playgroundRepositoryFolders.Form1AppFolder.picture_from_textboxInfo">
            <summary>
            The picture_from_textbox item info.
            </summary>
        </member>
        <member name="P:playground.playgroundRepositoryFolders.Form1AppFolder.table_data">
            <summary>
            The table_data item.
            </summary>
        </member>
        <member name="P:playground.playgroundRepositoryFolders.Form1AppFolder.table_dataInfo">
            <summary>
            The table_data item info.
            </summary>
        </member>
        <member name="T:playground.Recording1">
             <summary>
            The Recording1 recording.
             </summary>
        </member>
        <member name="F:playground.Recording1.repo">
            <summary>
            Holds an instance of the playgroundRepository repository.
            </summary>
        </member>
        <member name="M:playground.Recording1.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:playground.Recording1.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="M:playground.Recording1.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:playground.Recording1.Instance"/>.
            </summary>
        </member>
        <member name="M:playground.Recording1.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:playground.Recording1.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:playground.table_stuff">
             <summary>
            The table_stuff recording.
             </summary>
        </member>
        <member name="F:playground.table_stuff.repo">
            <summary>
            Holds an instance of the playgroundRepository repository.
            </summary>
        </member>
        <member name="M:playground.table_stuff.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:playground.table_stuff.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="M:playground.table_stuff.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:playground.table_stuff.Instance"/>.
            </summary>
        </member>
        <member name="M:playground.table_stuff.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:playground.table_stuff.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:playground.utils.Table_handler">
            <summary>
            Description of test.
            </summary>
        </member>
        <member name="M:playground.utils.Table_handler.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="M:playground.utils.Table_handler.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this module.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="T:playground.utils.xml_json_ini_etc">
            <summary>
            Description of xml_json_ini_etc.
            </summary>
        </member>
        <member name="M:playground.utils.xml_json_ini_etc.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="M:playground.utils.xml_json_ini_etc.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this module.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="T:playground.validate_table_with_csv">
             <summary>
            The validate_table_with_csv recording.
             </summary>
        </member>
        <member name="F:playground.validate_table_with_csv.repo">
            <summary>
            Holds an instance of the playgroundRepository repository.
            </summary>
        </member>
        <member name="M:playground.validate_table_with_csv.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:playground.validate_table_with_csv.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="M:playground.validate_table_with_csv.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:playground.validate_table_with_csv.Instance"/>.
            </summary>
        </member>
        <member name="M:playground.validate_table_with_csv.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:playground.validate_table_with_csv.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:playground.verify_with_object">
             <summary>
            The verify_with_object recording.
             </summary>
        </member>
        <member name="F:playground.verify_with_object.repo">
            <summary>
            Holds an instance of the playgroundRepository repository.
            </summary>
        </member>
        <member name="M:playground.verify_with_object.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="P:playground.verify_with_object.Instance">
            <summary>
            Gets a static instance of this recording.
            </summary>
        </member>
        <member name="M:playground.verify_with_object.Start">
            <summary>
            Starts the replay of the static recording <see cref="P:playground.verify_with_object.Instance"/>.
            </summary>
        </member>
        <member name="M:playground.verify_with_object.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this recording.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="M:playground.verify_with_object.Init">
            <summary>
            This method gets called right after the recording has been started.
            It can be used to execute recording specific initialization code.
            </summary>
        </member>
        <member name="T:playground.xml_json_ini_stuff.convert_xml_to_json">
            <summary>
            Description of convert_xml_to_json.
            </summary>
        </member>
        <member name="M:playground.xml_json_ini_stuff.convert_xml_to_json.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="M:playground.xml_json_ini_stuff.convert_xml_to_json.Ranorex#Core#Testing#ITestModule#Run">
            <summary>
            Performs the playback of actions in this module.
            </summary>
            <remarks>You should not call this method directly, instead pass the module
            instance to the <see cref="M:Ranorex.Core.Testing.TestModuleRunner.Run(Ranorex.Core.Testing.ITestModule)"/> method
            that will in turn invoke this method.</remarks>
        </member>
        <member name="T:__RxMain.__RxProgram">
            <summary>
            Modified Program class that ensures that the Ranorex System gets initialized and cleaned up
            correctly. This file is auto-generated during project build. This class will invoke the
            original 'Main' method implementation as needed.
            </summary>
        </member>
        <member name="M:__RxMain.__RxProgram.Main(System.String[])">
            <summary>
            The entry point of the application.
            </summary>
            <param name="args">Contains any number of command line arguments.</param>
            <returns>The return value of the projects original 'Main' implementation.</returns>
        </member>
    </members>
</doc>
